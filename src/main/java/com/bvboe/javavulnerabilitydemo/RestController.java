package com.bvboe.javavulnerabilitydemo;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

@org.springframework.web.bind.annotation.RestController
public class RestController {

    /*
    Test with the following command:'
    curl "http://localhost:8080/doStuffOnHost?cmd=ls"
     */
    @GetMapping("/doStuffOnHost")
    public String doStuffOnHost(@RequestParam String cmd) {
        // Validate and sanitize the input (cmd) to prevent command injection attacks.

        // Execute the command on the host.
        try {
            Process process = Runtime.getRuntime().exec(cmd);
            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));

            StringBuilder output = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append("\n");
            }

            int exitCode = process.waitFor();
            return "Command executed with exit code: " + exitCode + "\nOutput:\n" + output.toString();

        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
            return "Error executing the command: " + e.getMessage();
        }
    }
}
